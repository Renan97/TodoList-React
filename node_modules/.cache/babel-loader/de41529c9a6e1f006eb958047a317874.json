{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reposit\\xF3rios GitHub\\\\TodoList-React\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/Header.js\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.initTodoList = res => {\n      console.log(res);\n    };\n\n    this.toggleComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })); // this.setState({\n      //   todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      // });\n    };\n\n    this.maxIdValue = todos => {\n      var id = 0;\n      todos.forEach(todo => {\n        if (todo.id > id) {\n          id = todo.id;\n        }\n      });\n      return id;\n    };\n\n    this.AddTodo = newTitle => {\n      // console.log(this.maxIdValue(this.state.todos) + 1);\n      // const newTodo = {\n      //   id: this.maxIdValue(this.state.todos) + 1,\n      //   title: newTitle,\n      //   completed: false\n      // };\n      // this.setState({ todos: [...this.state.todos, newTodo] });\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title: newTitle,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    var renan = axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(res => {\n      this.setState({\n        todos: res.data\n      });\n      this.initTodoList(res.data);\n      return 1;\n    });\n    console.log(renan.value);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        AddTodo: this.AddTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        toggleComplete: this.toggleComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/RepositÃ³rios GitHub/TodoList-React/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","initTodoList","res","console","log","toggleComplete","id","setState","map","todo","completed","delTodo","delete","then","filter","maxIdValue","forEach","newTitle","post","title","data","componentDidMount","renan","get","value","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/layout/Header.js\";\r\nimport Todos from \"./components/Todos\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport About from \"./components/pages/About\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: []\r\n  };\r\n\r\n  initTodoList = res => {\r\n    console.log(res);\r\n  };\r\n\r\n  componentDidMount() {\r\n    var renan = axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then(res => {\r\n        this.setState({ todos: res.data });\r\n        this.initTodoList(res.data);\r\n        return 1;\r\n      });\r\n    console.log(renan.value);\r\n  }\r\n\r\n  toggleComplete = id => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n\r\n  delTodo = id => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\r\n      this.setState({\r\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\r\n      })\r\n    );\r\n    // this.setState({\r\n    //   todos: [...this.state.todos.filter(todo => todo.id !== id)]\r\n    // });\r\n  };\r\n\r\n  maxIdValue = todos => {\r\n    var id = 0;\r\n    todos.forEach(todo => {\r\n      if (todo.id > id) {\r\n        id = todo.id;\r\n      }\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  AddTodo = newTitle => {\r\n    // console.log(this.maxIdValue(this.state.todos) + 1);\r\n    // const newTodo = {\r\n    //   id: this.maxIdValue(this.state.todos) + 1,\r\n    //   title: newTitle,\r\n    //   completed: false\r\n    // };\r\n    // this.setState({ todos: [...this.state.todos, newTodo] });\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        title: newTitle,\r\n        completed: false\r\n      })\r\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\r\n  };\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Header />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={props => (\r\n                <React.Fragment>\r\n                  <AddTodo AddTodo={this.AddTodo} />\r\n                  <Todos\r\n                    todos={this.state.todos}\r\n                    toggleComplete={this.toggleComplete}\r\n                    delTodo={this.delTodo}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/about\" component={About}></Route>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}