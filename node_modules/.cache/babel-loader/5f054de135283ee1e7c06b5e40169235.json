{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reposit\\xF3rios GitHub\\\\TodoList-React\\\\src\\\\components\\\\TodoItem.js\";\nimport React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        backgoundColor: \"#f4f4f4\",\n        padding: \"10px\",\n        borderBottom: \" 1px #ccc dotted\",\n        textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n      };\n    };\n  }\n\n  render() {\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: this.state.chkbox,\n      onClick: this.props.toggleComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), \" \", title, React.createElement(\"button\", {\n      style: btnDelete,\n      onClick: this.props.delTodo.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"X\")));\n  }\n\n}\nTodoItem.PropType = {\n  todo: PropType.array.isRequired,\n  toggleComplete: PropType.func.isRequired,\n  delTodo: PropType.func.isRequired\n};\nconst btnDelete = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px\",\n  borderRadius: \"20%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\nexport default TodoItem;","map":{"version":3,"sources":["C:/RepositÃ³rios GitHub/TodoList-React/src/components/TodoItem.js"],"names":["React","Component","PropType","TodoItem","getStyle","backgoundColor","padding","borderBottom","textDecoration","props","todo","completed","render","id","title","state","chkbox","toggleComplete","bind","btnDelete","delTodo","array","isRequired","func","background","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,QADsC,GAC3B,MAAM;AACf,aAAO;AACLC,QAAAA,cAAc,EAAE,SADX;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,YAAY,EAAE,kBAHT;AAILC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJxD,OAAP;AAMD,KARqC;AAAA;;AAUtCC,EAAAA,MAAM,GAAG;AAAA,6BACe,KAAKH,KAAL,CAAWC,IAD1B;AAAA,UACCG,EADD,oBACCA,EADD;AAAA,UACKC,KADL,oBACKA,KADL;AAEP,WACE;AAAK,MAAA,KAAK,EAAE,KAAKV,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,cAAc,EAAE,KAAKW,KAAL,CAAWC,MAF7B;AAGE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,cAAX,CAA0BC,IAA1B,CAA+B,IAA/B,EAAqCL,EAArC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKK,GALL,EAMGC,KANH,EAOE;AAAQ,MAAA,KAAK,EAAEK,SAAf;AAA0B,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OAAX,CAAmBF,IAAnB,CAAwB,IAAxB,EAA8BL,EAA9B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF,CADF;AAeD;;AA3BqC;AA6BxCV,QAAQ,CAACD,QAAT,GAAoB;AAClBQ,EAAAA,IAAI,EAAER,QAAQ,CAACmB,KAAT,CAAeC,UADH;AAElBL,EAAAA,cAAc,EAAEf,QAAQ,CAACqB,IAAT,CAAcD,UAFZ;AAGlBF,EAAAA,OAAO,EAAElB,QAAQ,CAACqB,IAAT,CAAcD;AAHL,CAApB;AAKA,MAAMH,SAAS,GAAG;AAChBK,EAAAA,UAAU,EAAE,SADI;AAEhBC,EAAAA,KAAK,EAAE,MAFS;AAGhBC,EAAAA,MAAM,EAAE,MAHQ;AAIhBpB,EAAAA,OAAO,EAAE,KAJO;AAKhBqB,EAAAA,YAAY,EAAE,KALE;AAMhBC,EAAAA,MAAM,EAAE,SANQ;AAOhBC,EAAAA,KAAK,EAAE;AAPS,CAAlB;AAUA,eAAe1B,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropType from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      backgoundColor: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \" 1px #ccc dotted\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={this.state.chkbox}\r\n            onClick={this.props.toggleComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button style={btnDelete} onClick={this.props.delTodo.bind(this, id)}>\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTodoItem.PropType = {\r\n  todo: PropType.array.isRequired,\r\n  toggleComplete: PropType.func.isRequired,\r\n  delTodo: PropType.func.isRequired\r\n};\r\nconst btnDelete = {\r\n  background: \"#ff0000\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px\",\r\n  borderRadius: \"20%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\"\r\n};\r\n\r\nexport default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}